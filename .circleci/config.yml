version: 2
jobs:
  checkout:
    working_directory: ~/rememberme-server
    docker:
      - image: circleci/python:3.6-browsers
    steps:
      - checkout
      - save_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/rememberme-server
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

  unit-test:
    working_directory: ~/rememberme-server
    docker:
      - image: circleci/python:3.6-browsers
        environment:
          DJANGO_SETTINGS_MODULE: config.settings.test
          PYTHONUNBUFFERED: 1
          SECRET_KEY: TEST_DJANGO_SECRET_KEY
      - image: circleci/postgres:9.6-alpine-ram
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: ""
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          - v1-dependencies-
      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            coverage erase
            coverage run --rcfile=.coveragerc manage.py test
      - run:
          name: Build test reports
          command: |
            . venv/bin/activate
            coverage html
      - store_artifacts:
          path: coverage_html
          destination: coverage-test-reports
      - store_test_results:
          path: coverage_html

  deploy-to-heroku:
    working_directory: ~/rememberme-server
    docker:
      - image: buildpack-deps:bionic
    steps:
      - checkout
      - run:
          name: Deploy to Heroku if branch is production
          command: |
            if [ "${CIRCLE_BRANCH}" == "production" ]; then
              git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master
            if

workflows:
  version: 2
  deploy-flow:
    jobs:
      - checkout
      - unit-test:
          requires:
            - checkout
          filters:
            branches:
              only:
                - master
                - production
      - deploy-to-heroku:
          requires:
            - unit-test
            - filters:
                branches:
                  only:
                    - production
